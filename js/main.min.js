$(".favourite-btn,.cart-btn").click(function () {
    $(this).toggleClass("_active")
})

function setLabelPlace(){
    let fields = document.querySelectorAll(".fg input")

    fields.forEach(field => {
        setLabelPosition(field)

        field.oninput = ()=> {
            setLabelPosition(field)
        }

        function setLabelPosition() {
            if(field.value !== ""){
                field.classList.add("_filled")
                field.classList.add("_hide-placeholder")
            } else{
                field.classList.remove("_filled")
                field.classList.remove("_hide-placeholder")
            }
        }
    })
}


setLabelPlace()

function cartCalc() {
    $('.cartcalc .ccalc-minus').click(function(e) {
        let a = $(this).closest('.cartcalc').find('input').val();
        if (a > 1) {
            let b = +a - 1;
            $(this).closest('.cartcalc').find('input').val(b);
            $(this).closest('.cartcalc').find('input').trigger('change');
        } else {
            $(this).closest('.cartcalc').find('input').val(a);
        }
        e.stopImmediatePropagation()
    });

    $('.cartcalc .ccalc-plus').click(function(e) {
        let a = $(this).closest('.cartcalc').find('input').val();
        let b = +a + 1;
        $(this).closest('.cartcalc').find('input').val(b);
        $(this).closest('.cartcalc').find('input').trigger('change');
        e.stopImmediatePropagation()
    });

}

cartCalc()

$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    console.log(parentBlock)
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

$(document).on('click', '.rating-input__item', function(e) {
    let ratingItem = parseInt($(this).attr("data-rating-value"))
    $(this).parent(".rating-input").attr("data-total-rating", ratingItem)
    $(this).siblings(".rating-input__field").val(ratingItem)
})


$(".pass-toggle").click(function () {
    if($(this).hasClass("_active")){
        $(this).removeClass("_active")
        $(this).siblings("input").attr("type","password")
    } else{
        $(this).addClass("_active")
        $(this).siblings("input").attr("type","text")
    }
})

$("._toggle-search").click(function () {
    $(".search-modal").toggleClass("_active")
    $("body").toggleClass("fixed-body")
})

$("._toggle-catalog-menu").click(function () {
    $(".header").toggleClass("_open-menu")
    $("body").toggleClass("fixed-body")
})

$(".menu-group__show").click(function () {
    $(this).parents(".menu-group").toggleClass("_active")
    $(this).siblings(".menu-group__hidden").slideToggle()
})

$(".footer-nav__show").click(function () {
    if(window.innerWidth<=576){
        $(this).parents(".footer-nav").toggleClass("_active")
        $(this).siblings(".footer-nav__hidden").slideToggle()
    }
})

function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function Gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                100: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                100: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}

Sliders()
Gallery()

// $(window).on('load resize', function(){
//     if ($(window).width() <= 576) {
//         $('.catalog-item__media').insertAfter('.product-card__reviews');
//     } else{
//         $('.catalog-item__media').insertBefore('.catalog-item__info');
//     }
// });

$("._toggle-filter").click(function () {
    $(".filter").toggleClass("_open")
    $("body").toggleClass("fixed-body")
})

$(".filter-select .m-check input").click(function () {
    renderFilterOutput($(this).attr("name"))
})

$(".filter-item").each(function (index,el) {
    renderFilterOutput($(el).attr("data-name"))
})

function renderFilterOutput(name) {
    let field = $(`.filter-item[data-name="${name}"]`).find(".filter-select__field input")
    let value = ""
    let checkedInputs = $(`input[name="${name}"]:checked`)
    let outputContainer= $(`.selected-filter[data-name="${name}"] .selected-filter__items`)
    let outputItems = ``

    $(checkedInputs).each(function (i,checkedItem) {
        let id = $(checkedItem).attr("data-id")
        value += $(checkedItem).attr("data-value") + ", "
        outputItems += `
        <div class="selected-filter__item">
            <span>${$(checkedItem).attr("data-value")}</span>
            <button data-name="${name}" data-id="${id}" class="selected-filter__remove">
                <svg width="7" height="8" viewBox="0 0 7 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M6.84471 0.660592C6.74552 0.561178 6.61085 0.505309 6.47042 0.505309C6.32999 0.505309 6.19532 0.561178 6.09613 0.660592L3.5 3.25142L0.903868 0.655283C0.804678 0.555869 0.670013 0.5 0.529579 0.5C0.389145 0.5 0.25448 0.555869 0.15529 0.655283C-0.0517634 0.862336 -0.0517634 1.19681 0.15529 1.40386L2.75142 4L0.15529 6.59613C-0.0517634 6.80318 -0.0517634 7.13766 0.15529 7.34471C0.362344 7.55176 0.696815 7.55176 0.903868 7.34471L3.5 4.74857L6.09613 7.34471C6.30319 7.55176 6.63766 7.55176 6.84471 7.34471C7.05176 7.13766 7.05176 6.80318 6.84471 6.59613L4.24858 4L6.84471 1.40386C7.04645 1.20212 7.04645 0.862336 6.84471 0.660592Z" fill="#484A4B"/>
                </svg>
            </button>
        </div>
        `
    })

    $(outputContainer).html(outputItems)

    if(value.trim().length > 0){
        $(field).val(value)
        $(`.selected-filter[data-name="${name}"]`).addClass("_active")
    } else{
        $(field).val("")
        $(`.selected-filter[data-name="${name}"]`).removeClass("_active")
        $(outputContainer).html("")
    }

}

$(document).on('click', '.selected-filter__remove', function(e) {
    let id = $(this).attr("data-id")
    let name = $(this).attr("data-name")
    $(`input[name="${name}"][data-id="${id}"]`).prop("checked",false)
    renderFilterOutput(name)
})

$(".filter-select__field").click(function () {
    if($(this).parents(".filter-select").hasClass("_active")){
        $(".filter-select").removeClass("_active")
    } else{
        $(".filter-select").removeClass("_active")
        $(this).parents(".filter-select").addClass("_active")
    }
})

$(document).mouseup( function(e){
    var div = $( ".filter-select" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(div).hasClass("_active")){
            $(div).removeClass("_active")
        }
    }
});

let filterSliders = document.querySelectorAll(".filter-slider")

filterSliders.forEach(slider => {
    const rangeSlider = slider.querySelector(`.range-slider`)
    const rangeInput0 = slider.querySelector(`.range-slider__input1`)
    const rangeInput1 = slider.querySelector(`.range-slider__input2`)
    const rangeInputs = [rangeInput0, rangeInput1]

    let startValue1 = +slider.getAttribute("data-start")
    let startValue2 = +slider.getAttribute("data-start2")
    let min = +slider.getAttribute("data-min")
    let max = +slider.getAttribute("data-max")

    let priceOutput = document.querySelector(".price-output ._price1")
    let priceOutput2 = document.querySelector(".price-output ._price2")
    let prices = [priceOutput,priceOutput2]

    if (rangeSlider) {
        noUiSlider.create(rangeSlider, {
            start: [startValue1, startValue2],
            connect: true,
            step: 1,
            range: {
                'min': min,
                'max': max
            }
        });
    }
    if (rangeSlider) {
        rangeSlider.noUiSlider.on('update', function(values, handle) {
            rangeInputs[handle].value = Math.round(values[handle])
            prices[handle].innerHTML = Math.round(values[handle])
            if(Math.round(values[0])>startValue1 || Math.round(values[1]) < startValue2){
                $(".selected-filter[data-name='price']").addClass("_active")
            } else{
                $(".selected-filter[data-name='price']").removeClass("_active")
            }

        })
        rangeInputs.forEach((el, index) => {
            el.addEventListener('change', (e) => {
                setRangeSlider(index, e.currentTarget.value)
            })
        })
    }
    const setRangeSlider = (i, value) => {
        let array = [null, null];
        array[i] = value;
        rangeSlider.noUiSlider.set(array);
    };

    $(".price-output__remove").click(function () {
        rangeInputs[0].value = min
        rangeInputs[1].value = max
        rangeSlider.noUiSlider.set([min,max])
    })

})


let body = document.querySelector(".m-page")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function openModal(modalId) {
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();

$(".cookie-modal__btn").click(function () {
    $(".cookie-modal").removeClass("_active")
})

$(window).on('load resize', function(){
    if ($(window).width() <= 992) {
        $('.blog-nav').insertBefore('.blog__content');
    } else{
        $('.blog-nav').insertBefore('.subscribe');
    }
});

$(".blog-nav__show").click(function () {
    $(".blog-nav").toggleClass("_active")
    $(".blog-nav__hidden").slideToggle()
})

calcCartItemsTotalPrice()

function calcCartItemsTotalPrice() {
    $(".cart-item").each(function (i,el) {
        let count = +$(el).find(".cartcalc input").val()
        let price = +$(el).find("._price").attr("data-price")

        $(el).find("._price").html(price.toLocaleString())
        $(el).find("._price-total").html((price * count).toLocaleString())
    })
}


$(".cart-item .cartcalc input").change(function () {
    calcCartItemsTotalPrice()
})


$(".order-login__btn").click(function () {
    $(".order-login__hidden").slideToggle()
})

$(".order-promo__toggle").click(function () {
    $(".order-promo__bottom").slideToggle()
})

$("input[name='deliveryWay']").change(function () {
    let checkedVal = $("input[name='deliveryWay']:checked").val()
    console.log(checkedVal)


    $(`.delivery-form`).removeClass("_active")
    $(`.delivery-form._${checkedVal}`).addClass("_active")
})


$(".file-input input").change(function () {
    let parent = $(this).parents(".file-input")
    let input = $(this)

    if (typeof (FileReader) != "undefined") {
        let dvPreview = $(parent).find(".file-input__upload");

        $($(this)[0].files).each(function (i) {
            let file = $(this);
            let reader = new FileReader();
            reader.onload = function (e) {
                let img = `
                    <div class="upload-file">
                        <div class="upload-file__img">
                            <img src="${e.target.result}" alt="">
                        </div>
                        <button type="button" data-id="${i}" class="upload-file__remove">
                            <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <circle cx="9.5" cy="9.5" r="9.5" fill="#FF6915"/>
                                <path d="M12.955 6.04541L6.0459 12.9545M6.0459 6.04541L12.955 12.9545" stroke="white" stroke-width="1.4" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                        </button>
                    </div>
                    `
                dvPreview.append(img)
                $(parent).addClass("_uploaded")
                $(parent).find("input").insertAfter('.file-input__plus-btn');
            }
            reader.readAsDataURL(file[0]);
        });
    } else {
        alert("This browser does not support HTML5 FileReader.");
    }

    $(document).on('click', '.upload-file__remove', function(e) {
        let deletedId = +$(this).attr("data-id")
        $(this).parents(".upload-file").remove()

        let dataTransfer = new DataTransfer()

        for (let i = 0; i < $(input).get(0).files.length; i++) {
            if(deletedId !==i){
                dataTransfer.items.add($(input).get(0).files[i])
            }
        }
        $(input)[0].files = dataTransfer.files

        if($(input)[0].files.length === 0){
            $(parent).removeClass("_uploaded")
            $(parent).find("input").insertBefore('.file-input__wrap');
        }
        $(parent).find(".upload-file__remove").each(function (index,el) {
            $(el).attr("data-id",index)
        })
    })
});

$("._toggle-lk-menu").click(function () {
    $(".lk-menu").toggleClass("_active")
    $("body").toggleClass("fixed-body")
})

$(document).ready(function() {
    $('input[type="tel"]').mask('+7 (999) 999-99-99', { autoclear: false }, { placeholder: '+7 (   )    -  -  ' });
    $(".fg select").niceSelect()
    $('.time-input input').timepicker({
        timeFormat: 'h:mm',
        dynamic: false,
        dropdown: true,
        scrollbar: true,
        interval: 15,
        startTime: '14:45',
    });


    new AirDatepicker('.date-input input', {
        locale: {
            days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
            daysShort: ['Вос', 'Пон', 'Вто', 'Сре', 'Чет', 'Пят', 'Суб'],
            daysMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],
            months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
            monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
            today: 'Сегодня',
            clear: 'Очистить',
            dateFormat: 'dd/MM/yyyy',
            timeFormat: 'HH:mm',
            firstDay: 1
        },
        autoClose: true,
        startDate: new Date(),
        selectedDates: [new Date()],
        // inline: true,
        mobile: true,
        onSelect: () => {

        }
    })

    getScrollBarSize()

    fix100vh()
    $(window).resize(function () {
        fix100vh()
        // setPlaceholders()
        getScrollBarSize()
    })
});

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
